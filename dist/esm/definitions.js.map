{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\n\ndeclare module '@capacitor/cli' {\n  export interface PluginsConfig {\n    /**\n     * These configuration values are available:\n     */\n    Bugly?: {\n      /**\n       * Auto init @default true\n       */\n      autoInit?: boolean;\n\n      /**\n       * Bugly App ID (Andoid)\n       */\n      androidAppId?: string;\n\n      /**\n       * Bugly App ID (iOS)\n       */\n      iOSAppId?: string;\n\n      /**\n       * Whether to retrieve the system trace file when setting ANR @default false (Andoid)\n       */\n      enableCatchAnrTrace?: boolean;\n\n      /**\n       * Set whether to obtain the mainline stack during the ANR process @default true (Andoid)\n       */\n      enableRecordAnrMainStack?: boolean;\n\n      /**\n       * Network synchronization data (millisecond) @default 10000 (Andoid)\n       */\n      appReportDelay?: number\n\n      /**\n       * Abnormal exit event recording switch @default false (iOS)\n       */\n      enableUnexpectedTerminatingDetection?: boolean;\n\n      /**\n       * Page information recording switch @default true (iOS)\n       */\n      enableViewControllerTracking?: boolean;\n\n      /**\n       * In process restore switch @default true (iOS)\n       */\n      enableSymbolicateInProcess?: boolean;\n\n      /**\n       * Stuck monitoring switch @default false (iOS)\n       */\n      enableBlockMonitor?: boolean;\n\n      /**\n       * Check interval for lag monitoring, in seconds @default 15 (iOS)\n       */\n      blockMonitorTimeout?: number;\n\n      /**\n       * Debug Mode @default false\n       */\n      debug?: boolean;\n    };\n  }\n}\n\nexport interface SetUserValueOptions {\n  key: string;\n  value: string;\n}\n\nexport interface SetUserSceneTagOptions {\n  tag: number;\n}\n\nexport interface BuglyPlugin {\n  /**\n   * Manually initializing Bugly\n   */\n  initCrashReport(): Promise<void>;\n\n  /**\n   * Custom Map parameters can save some custom environment information when a crash occurs\n   */\n  setUserValue(options: SetUserValueOptions): Promise<void>;\n\n  /**\n   * Custom tags are used to indicate a certain \"scene\" in the app. When a crash occurs,\n   * the \"scene\" where the crash occurs will be displayed,\n   * based on the last set label, and the label ID must be greater than 0\n   */\n  setUserSceneTag(options: SetUserSceneTagOptions): Promise<void>;\n}\n"]}